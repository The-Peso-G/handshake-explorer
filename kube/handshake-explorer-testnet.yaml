apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: handshake-explorer
  namespace: handshake-testnet
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    certmanager.k8s.io/acme-http01-edit-in-place: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($host = 'www.hnsxplorer.com' ) {
        rewrite ^ https://hnsxplorer.com$request_uri permanent;
      }
spec:
  backend:
    serviceName: handshake-explorer
    servicePort: 8000
spec:
  rules:
  - host: hnsxplorer.com
    http:
      paths:
      - backend:
          serviceName: handshake-explorer
          servicePort: 8000
  - host: www.hnsxplorer.com
    http:
      paths:
      - backend:
          serviceName: handshake-explorer
          servicePort: 8000
  # Note: This should be added after the cert is provisioned by certmanager,
  # otherwise gke will fail to provision a lb (or use a fake cert to start)
  tls:
    - hosts:
        - "hnsxplorer.com"
      secretName: hnsxplorer-domain-com
    - hosts:
        - "www.hnsxplorer.com"
      secretName: www-hnsxplorer-domain-com
---
apiVersion: v1
kind: Service
metadata:
  name: handshake-explorer
  namespace: handshake-testnet
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    app: handshake-explorer
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: handshake-explorer
  namespace: handshake-testnet
  labels:
    app: handshake-explorer
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: handshake-explorer
  template:
    metadata:
      labels:
        app: handshake-explorer
    spec:
      containers:
      - name: handshake-explorer
        image: gcr.io/hello-world-392/handshake-explorer
        ports:
        - containerPort: 8000
        env:
          - name: ENV
            value: 'testnet'
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db
                key: password
        livenessProbe:
          httpGet:
            path: /_/healthz
            port: 8000
            httpHeaders:
            - name: Host
              value: k8s-healthcheck
        readinessProbe:
          httpGet:
            path: /_/readiness
            port: 8000
            httpHeaders:
            - name: Host
              value: k8s-healthcheck
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: handshake-explorer-celery-beat
  namespace: handshake-testnet
  labels:
    app: handshake-explorer-celery-beat
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: handshake-explorer-celery-beat
  template:
    metadata:
      labels:
        app: handshake-explorer-celery-beat
    spec:
      containers:
      - name: handshake-explorer-celery-beat
        image: gcr.io/hello-world-392/handshake-explorer
        command: ["celery", "-A", "hsdexplorer", "beat", "-l", "info"]
        env:
          - name: ENV
            value: 'testnet'
          - name: PYTHONUNBUFFERED
            value: 'true'
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db
                key: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: handshake-explorer-celery
  namespace: handshake-testnet
  labels:
    app: handshake-explorer-celery
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: handshake-explorer-celery
  template:
    metadata:
      labels:
        app: handshake-explorer-celery
    spec:
      containers:
      - name: handshake-explorer-celery
        image: gcr.io/hello-world-392/handshake-explorer
        command: ["celery", "-A", "hsdexplorer", "worker", "-l", "info"]
        env:
          - name: ENV
            value: 'testnet'
          - name: PYTHONUNBUFFERED
            value: 'true'
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db
                key: password
